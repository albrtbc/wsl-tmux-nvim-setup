[tool:pytest]
# Pytest configuration for WSL-Tmux-Nvim-Setup

minversion = 6.0
addopts = 
    -ra 
    -q 
    --strict-markers 
    --strict-config
    --tb=short
    --showlocals

testpaths = tests

python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions  
    e2e: End-to-end tests for complete workflows
    performance: Performance and benchmark tests
    security: Security validation tests
    slow: Slow tests that may take significant time
    network: Tests requiring network access
    interactive: Tests requiring user interaction

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration  
[coverage:run]
source = cli
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov
title = WSL-Tmux-Nvim-Setup Test Coverage

[coverage:xml] 
output = coverage.xml